function LinkedList.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
return
function LinkedList.dispose 0
push argument 0
pop pointer 0
push this 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
call LinkedList.dispose 1
pop temp 0
label IF_FALSE0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function LinkedList.printList 0
push argument 0
pop pointer 0
push this 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
call Output.printInt 1
pop temp 0
push this 2
call LinkedList.printList 1
pop temp 0
label IF_FALSE0
push constant 0
return
function LinkedList.checkForHit 2
push argument 0
pop pointer 0
push constant 0
pop static 0
push this 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 0
sub
pop local 0
push argument 2
push this 1
sub
pop local 1
push local 1
call Math.abs 1
push argument 3
push constant 10
add
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Math.abs 1
push argument 3
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop static 0
label IF_FALSE2
label IF_FALSE1
push static 0
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
push this 2
push argument 1
push argument 2
push argument 3
call LinkedList.checkForHit 4
pop temp 0
label IF_FALSE0
push static 0
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
return
goto IF_END4
label IF_FALSE4
push constant 0
return
label IF_END4
function LinkedList.checkForSideHit 3
push argument 0
pop pointer 0
push constant 0
pop static 1
push this 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 0
sub
pop local 1
push argument 2
push this 1
sub
pop local 2
push local 2
call Math.abs 1
push argument 3
lt
push local 1
call Math.abs 1
push argument 3
push constant 10
add
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 4
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 0
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop static 1
label IF_FALSE3
label IF_FALSE2
push argument 4
push constant 1
neg
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop static 1
label IF_FALSE5
label IF_FALSE4
label IF_FALSE1
push static 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
return
label IF_FALSE6
push this 2
push argument 1
push argument 2
push argument 3
push argument 4
call LinkedList.checkForSideHit 5
pop temp 0
label IF_FALSE0
push static 1
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
return
goto IF_END7
label IF_FALSE7
push constant 0
return
label IF_END7
